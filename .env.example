# --- Core Flask Settings ---
# REQUIRED: Generate a strong secret key (e.g., run: python -c 'import secrets; print(secrets.token_hex(24))')
FLASK_SECRET_KEY=

# Optional: Port the Flask app runs on
# PORT=5001

# Optional: Disable CSRF protection (NOT recommended for production)
# WTF_CSRF_ENABLED=false

# --- Application Paths ---
# Optional: Override default paths if needed
# INSTANCE_FOLDER_PATH=/path/to/instance
# DATABASE_PATH=/path/to/instance/videos.db
# DOWNLOAD_DIR=/path/to/downloads
# PROCESSED_CLIPS_DIR=/path/to/processed_clips

# --- Logging Settings ---
# Optional: Override log file path and level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
# LOG_FILE_PATH=/path/to/instance/app.log
# LOG_LEVEL=INFO

# --- Media Utilities (FFmpeg/FFprobe) ---
# Optional: Set explicit path if 'ffmpeg' is not in system PATH
# FFMPEG_PATH=/usr/local/bin/ffmpeg
# Optional: Set explicit path if 'ffprobe' is not relative to FFMPEG_PATH or in system PATH
# FFPROBE_PATH=/usr/local/bin/ffprobe

# --- Faster-Whisper (Transcription) Settings ---
# Optional: Choose model size (tiny.en, base.en, small.en, medium.en, large-v2, large-v3)
# FASTER_WHISPER_MODEL=medium.en
# Optional: Specify compute type (float16, int8_float16, int8 for GPU; float32, int16, int8 for CPU)
# FASTER_WHISPER_COMPUTE_TYPE=int8

# --- Celery/Background Worker Settings ---
# REQUIRED: URL for your Redis broker (or other Celery broker)
CELERY_BROKER_URL=redis://localhost:6379/0
# REQUIRED: URL for your Redis result backend (or other Celery backend)
CELERY_RESULT_BACKEND=redis://localhost:6379/1

# --- Clipping & Editing Defaults ---
# Optional: Minimum duration for any clip
# CLIP_MIN_DURATION_SECONDS=1.5
# Optional: Maximum duration for manually created clips
# CLIP_MANUAL_MAX_DURATION_SECONDS=120.0
# Optional: Target aspect ratio for "short" clips (e.g., 9/16 for vertical) - Float value expected
# MOVIEPY_SHORT_CLIP_ASPECT_RATIO=0.5625
# Optional: Method for aspect ratio change ('crop' or 'resize')
# MOVIEPY_EDIT_METHOD=crop

# --- Google Gemini Settings ---
# REQUIRED for Gemini features: Get API key from Google AI Studio or Google Cloud
GEMINI_API_KEY=
# Optional: Specify Gemini model (e.g., gemini-1.5-flash-latest, gemini-pro)
# GEMINI_MODEL_NAME=gemini-1.5-flash-latest

# --- Waitress Production Server Settings ---
# Optional: Number of threads for Waitress server
# WAITRESS_THREADS=8